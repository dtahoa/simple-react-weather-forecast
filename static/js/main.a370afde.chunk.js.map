{"version":3,"sources":["assets/images/cloud.svg","assets/styles.ts","components/header/index.tsx","components/footer/index.tsx","layouts/app.tsx","components/notfound/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","containerFluid","paddingRight","paddingLeft","marginRight","marginLeft","display","content","clear","bottom","borderTop","padding","fontFamily","fontWeight","lineHeight","zIndex","styles","makeStyles","appBar","backgroundColor","boxShadow","marginBottom","position","width","height","paddingTop","color","border","borderRadius","transition","minHeight","borderBottom","container","link","textDecoration","logo","verticalAlign","Header","classes","AppBar","className","Toolbar","to","data-testid","src","Logo","alt","useStyles","left","float","right","margin","fontSize","footer","Footer","moment","format","href","target","rel","theme","wrapper","top","marginTop","AppLayout","createMuiTheme","typography","join","subtitle1","ThemeProvider","onClick","window","open","PageNotFound","Boolean","location","hostname","match","ReactDOM","render","StrictMode","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a370afde.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cloud.5773db50.svg\";","const defaultFont = {\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  fontWeight: '300',\n  lineHeight: '1.5em',\n};\nconst grayColor = [\n  '#999',\n  '#777',\n  '#3C4858',\n  '#AAAAAA',\n  '#D2D2D2',\n  '#DDD',\n  '#555555',\n  '#333',\n  '#eee',\n  '#ccc',\n  '#e4e4e4',\n  '#E5E5E5',\n  '#f9f9f9',\n  '#f5f5f5',\n  '#495057',\n  '#e7e7e7',\n  '#212121',\n  '#c8c8c8',\n  '#505050',\n];\nconst containerFluid = {\n  paddingRight: '15px',\n  paddingLeft: '15px',\n  marginRight: 'auto',\n  marginLeft: 'auto',\n  '&:before,&:after': {\n    display: 'table',\n    content: '\" \"',\n  },\n  '&:after': {\n    clear: 'both',\n  },\n};\n\nconst container = {\n  paddingRight: '15px',\n  paddingLeft: '15px',\n  marginRight: 'auto',\n  marginLeft: 'auto',\n  '@media (min-width: 768px)': {\n    width: '750px',\n  },\n  '@media (min-width: 992px)': {\n    width: '970px',\n  },\n  '@media (min-width: 1200px)': {\n    width: '1170px',\n  },\n  '&:before,&:after': {\n    display: 'table',\n    content: '\" \"',\n  },\n  '&:after': {\n    clear: 'both',\n  },\n};\n\nconst footerStyle = {\n  right: {\n    margin: '0',\n    fontSize: '14px',\n    float: 'right!important',\n    padding: '15px',\n  },\n  footer: {\n    bottom: '0',\n    borderTop: `1px solid ${grayColor[15]}`,\n    padding: '15px 0',\n    ...defaultFont,\n    zIndex: 4,\n  },\n};\n\nexport { containerFluid, container, footerStyle };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar } from '@material-ui/core';\n\nimport { containerFluid } from '../../assets/styles';\nimport Logo from '../../assets/images/cloud.svg';\n\nconst styles = makeStyles({\n  appBar: {\n    backgroundColor: 'transparent',\n    boxShadow: 'none',\n    marginBottom: '0',\n    position: 'absolute',\n    width: '100%',\n    height: '73px',\n    paddingTop: '10px',\n    zIndex: 1029,\n    color: '#555555',\n    border: '0',\n    borderRadius: '3px',\n    padding: '10px 0',\n    transition: 'all 150ms ease 0s',\n    minHeight: '50px',\n    display: 'block',\n    borderBottom: '1px solid #0028641f',\n  },\n  container: {\n    ...containerFluid,\n    minHeight: '50px',\n  },\n  link: {\n    textDecoration: 'none',\n  },\n  logo: {\n    height: '40px',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n  },\n});\n\nexport default function Header() {\n  const classes = styles();\n\n  return (\n    <AppBar className={classes.appBar}>\n      <Toolbar className={classes.container}>\n        <Link to=\"/\" className={classes.link} data-testid=\"homeLink\">\n          <img src={Logo} className={classes.logo} alt=\"Weather Forecast\" />{' '}\n          Forecast App\n        </Link>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { containerFluid } from '../../assets/styles';\n\nconst useStyles = makeStyles({\n  container: { ...containerFluid },\n  left: {\n    float: 'left',\n    display: 'block',\n  },\n  right: {\n    margin: '0',\n    fontSize: '14px',\n    float: 'right',\n    padding: '15px',\n  },\n  footer: {\n    bottom: '0',\n    padding: '15px 0',\n    zIndex: 4,\n  },\n});\n\nexport default function Footer() {\n  const classes = useStyles();\n  return (\n    <footer className={classes.footer}>\n      <div className={classes.container}>\n        <p className={classes.right}>\n          &copy;{moment().format('YYYY')}\n          <a\n            href=\"https://dtahoa.github.io\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            dtahoa\n          </a>\n        </p>\n      </div>\n    </footer>\n  );\n}\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\n\nimport Header from '../components/header';\nimport Footer from '../components/footer';\n\nimport routes from '../routes';\n\nimport { containerFluid } from '../assets/styles';\nimport { RouteType } from '../types';\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    position: 'relative',\n    top: '0',\n    height: '100vh',\n    '&:after': {\n      display: 'table',\n      clear: 'both',\n      content: '\" \"',\n    },\n  },\n  content: {\n    marginTop: '70px',\n    padding: '30px 15px',\n    minHeight: 'calc(100vh - 222px)',\n  },\n  container: { ...containerFluid },\n}));\n\nconst AppLayout: React.FC = () => {\n  const classes = useStyles();\n\n  const theme = createMuiTheme({\n    typography: {\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n      subtitle1: {\n        fontSize: 16,\n        fontWeight: 'bold',\n      },\n    },\n  });\n\n  const getRoutes = (routeList: RouteType[]) => {\n    return routeList.map((prop) => {\n      if (prop.layout === '/') {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={prop.name}\n          />\n        );\n      }\n      return null;\n    });\n  };\n  const handleClick = () => {\n    window.open('https://api-nadio-service.nadio.co.kr/users/me/CheckplusSuccess', '_blank');\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Header />\n      <div className={classes.content}>\n        {/* <div className={classes.container}>{getRoutes(routes)}</div> */}\n        <button onClick={handleClick}>\n          Click me to open the link\n        </button>\n      </div>\n\n      <Footer />\n    </ThemeProvider>\n  );\n};\n\nexport default AppLayout;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PageNotFound: React.FC = () => {\n  return (\n    <>\n      <h3>Page not found :(</h3>\n      <p>\n        Maybe the page you are looking for has been removed, or you typed in the\n        wrong URL\n      </p>\n      <Link to=\"/\">Home page</Link>\n    </>\n  );\n};\n\nexport default PageNotFound;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport './index.css';\nimport AppLayout from './layouts/app';\nimport PageNotFound from './components/notfound';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={AppLayout} />\n        <Route component={PageNotFound} />\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}