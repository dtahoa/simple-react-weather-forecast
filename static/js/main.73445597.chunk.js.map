{"version":3,"sources":["assets/images/cloud.svg","assets/styles.ts","components/header/index.tsx","components/footer/index.tsx","components/search/index.tsx","hooks/index.ts","components/weatherInfo/subHeader.tsx","components/forecast/index.tsx","components/weatherInfo/weatherInfo.tsx","api/index.ts","containers/weather/index.tsx","routes.ts","layouts/app.tsx","components/notfound/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","containerFluid","paddingRight","paddingLeft","marginRight","marginLeft","display","content","clear","bottom","borderTop","padding","fontFamily","fontWeight","lineHeight","zIndex","styles","makeStyles","appBar","backgroundColor","boxShadow","marginBottom","position","width","height","paddingTop","color","border","borderRadius","transition","minHeight","borderBottom","container","link","textDecoration","logo","verticalAlign","Header","classes","AppBar","className","Toolbar","to","data-testid","src","Logo","alt","useStyles","left","float","right","margin","fontSize","footer","Footer","moment","format","href","target","rel","theme","error","search","marginTop","WeatherSearch","props","onCityChange","useState","searchTerm","setSearchTerm","isSearching","setSearching","debouncedSearchTerm","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","hasError","Grid","item","md","style","textAlign","FormControl","InputLabel","htmlFor","Input","id","role","type","onChange","event","autoFocus","endAdornment","InputAdornment","CircularProgress","size","Typography","SubHeader","date","createStyles","icon","spacing","alignContent","justifyContent","cardGrid","paddingBottom","card","flexDirection","background","cardContent","flexGrow","wi","temp","Forecast","result","forecast","map","icons","icon_id","key","xs","sm","Card","CardContent","gutterBottom","variant","component","align","dt_txt","IconButton","disabled","aria-label","Math","round","min","max","justify","root","minWidth","iconTemp","borderRight","tempDesc","WeatherInfo","loadingWeather","currentWeather","CardHeader","title","city","country","subheader","temperature","description","replace","txt","charAt","toUpperCase","substr","toLowerCase","CardActions","API_URL","process","API_KEY","handleResponse","response","ok","json","Error","statusText","mapDataToWeatherInterface","data","mapped","name","sys","dt","humidity","main","weather","wind_speed","wind","speed","condition","cod","temp_max","temp_min","dashRoutes","path","setCity","setError","setCurrentWeather","setForecast","setLoadingWeather","fetch","then","res","Object","entries","length","getWeather","catch","err","message","i","list","push","getForecast","keys","Container","maxWidth","layout","wrapper","top","AppLayout","createMuiTheme","typography","join","subtitle1","ThemeProvider","routes","prop","PageNotFound","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"k0HAAAA,EAAOC,QAAU,IAA0B,mC,6MC0BrCC,EAAiB,CACrBC,aAAc,OACdC,YAAa,OACbC,YAAa,OACbC,WAAY,OACZ,mBAAoB,CAClBC,QAAS,QACTC,QAAS,OAEX,UAAW,CACTC,MAAO,S,GAkCF,yBACLC,OAAQ,IACRC,UAAU,aAAD,OAnDX,WAoDEC,QAAS,UAzEO,CAClBC,WAAY,6CACZC,WAAY,MACZC,WAAY,UAmEN,IAKJC,OAAQ,I,gBCnENC,EAASC,YAAW,CACxBC,OAAQ,CACNC,gBAAiB,cACjBC,UAAW,OACXC,aAAc,IACdC,SAAU,WACVC,MAAO,OACPC,OAAQ,OACRC,WAAY,OACZV,OAAQ,KACRW,MAAO,UACPC,OAAQ,IACRC,aAAc,MACdjB,QAAS,SACTkB,WAAY,oBACZC,UAAW,OACXxB,QAAS,QACTyB,aAAc,uBAEhBC,UAAU,2BACL/B,GADI,IAEP6B,UAAW,SAEbG,KAAM,CACJC,eAAgB,QAElBC,KAAM,CACJX,OAAQ,OACRlB,QAAS,eACT8B,cAAe,YAIJ,SAASC,IACtB,IAAMC,EAAUtB,IAEhB,OACE,kBAACuB,EAAA,EAAD,CAAQC,UAAWF,EAAQpB,QACzB,kBAACuB,EAAA,EAAD,CAASD,UAAWF,EAAQN,WAC1B,kBAAC,IAAD,CAAMU,GAAG,IAAIF,UAAWF,EAAQL,KAAMU,cAAY,YAChD,yBAAKC,IAAKC,IAAML,UAAWF,EAAQH,KAAMW,IAAI,qBAAsB,IADrE,kB,qBCzCFC,EAAY9B,YAAW,CAC3Be,UAAU,eAAM/B,GAChB+C,KAAM,CACJC,MAAO,OACP3C,QAAS,SAEX4C,MAAO,CACLC,OAAQ,IACRC,SAAU,OACVH,MAAO,QACPtC,QAAS,QAEX0C,OAAQ,CACN5C,OAAQ,IACRE,QAAS,SACTI,OAAQ,KAIG,SAASuC,IACtB,IAAMhB,EAAUS,IAChB,OACE,4BAAQP,UAAWF,EAAQe,QACzB,yBAAKb,UAAWF,EAAQN,WACtB,uBAAGQ,UAAWF,EAAQY,OAAtB,OACSK,MAASC,OAAO,QACvB,uBACEC,KAAK,2BACLC,OAAO,SACPC,IAAI,uBAHN,a,iGCjBV,IAAMZ,EAAY9B,aAAW,SAAC2C,GAAD,MAAY,CACvCC,MAAO,CACLnC,MAAO,MACPf,QAAS,QAEXmD,OAAQ,CACNC,UAAW,YASA,SAASC,EAAcC,GACpC,IAAM3B,EAAUS,IACRmB,EAAwBD,EAAxBC,aAAcL,EAAUI,EAAVJ,MAFyC,EAG3BM,mBAAS,IAHkB,mBAGxDC,EAHwD,KAG5CC,EAH4C,OAI3BF,oBAAS,GAJkB,mBAIxDG,EAJwD,KAI3CC,EAJ2C,KAKzDC,EC5BO,SAAqBC,EAAeC,GAAgB,IAAD,EACpBP,mBAASM,GADW,mBACzDE,EADyD,KACzCC,EADyC,KA4BhE,OAzBAC,qBACE,WAEE,IAAMC,EAAUC,YAAW,WACzBH,EAAkBH,KACjBC,GAUH,OAAO,WACLM,aAAaF,MAMjB,CAACJ,EAAOD,IAGHE,EDAqBM,CAAYb,EAAY,KAC9Cc,EAAWrB,IAAS,EAe1B,OAPAgB,qBAAU,WACJL,IACFN,EAAaM,GACbD,GAAa,MAEd,CAACL,EAAcM,EAAqBF,IAGrC,kBAACa,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,MAAO,CAAEC,UAAW,SACrC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,eAApB,mBACA,kBAACC,EAAA,EAAD,CACEC,GAAG,cACHC,KAAK,SACLC,KAAK,OACLjC,MAAOqB,EACPa,SArBa,SAACC,GACpBzB,GAAa,GACbF,EAAc2B,EAAMtC,OAAOe,QAoBrBwB,WAAS,EACTC,aACE5B,EACE,kBAAC6B,EAAA,EAAD,CAAgB7E,SAAS,OACvB,kBAAC8E,EAAA,EAAD,CAAkBC,KAAM,MAIxB,kBAACF,EAAA,EAAD,CAAgB7E,SAAS,SACvB,kBAAC,IAAD,SAKTuC,GAAS,kBAACyC,EAAA,EAAD,CAAY9D,UAAWF,EAAQuB,OAAQA,K,sCEtE1C0C,EAFG,SAACtC,GAAD,OAA6B,8BAAOV,IAAOU,EAAMuC,MAAMhD,OAAO,gB,0BCQ1ET,EAAY9B,aAAW,SAAC2C,GAAD,OAC3B6C,YAAa,CACXC,KAAM,CACJtG,YAAawD,EAAM+C,QAAQ,GAC3BC,aAAc,SACdC,eAAgB,SAChBtB,UAAW,UAEbuB,SAAU,CACRD,eAAgB,SAChBtB,UAAW,SACX9D,WAAYmC,EAAM+C,QAAQ,GAC1BI,cAAenD,EAAM+C,QAAQ,IAE/BK,KAAM,CACJxF,OAAQ,OACRlB,QAAS,OACT2G,cAAe,SACfJ,eAAgB,SAChBK,WAAY,WAEdC,YAAa,CACXC,SAAU,GAEZC,GAAI,CACF3F,MAAO,WAET4F,KAAM,CACJV,aAAc,SACdrB,UAAW,eA8DFgC,EA1D0C,SAACtD,GACxD,IAAM3B,EAAUS,IAGVyE,EADevD,EAAbwD,SACgBC,KAAI,SAACtC,GAC3B,IAAMsB,EAHO,SAGSiB,EAAMvC,EAAKwC,SAASlB,KAE1C,OACE,kBAACvB,EAAA,EAAD,CAAMC,MAAI,EAACyC,IAAKzC,EAAKoB,KAAMsB,GAAI,GAAIC,GAAI,EAAG1C,GAAI,GAC5C,kBAAC2C,EAAA,EAAD,CAAMxF,UAAWF,EAAQ0E,MACvB,kBAACiB,EAAA,EAAD,CAAazF,UAAWF,EAAQ6E,aAC9B,kBAACb,EAAA,EAAD,CACE4B,cAAY,EACZC,QAAQ,YACRC,UAAU,KACVC,MAAM,UAEL9E,IAAO6B,EAAKkD,QAAQ9E,OAAO,SAE9B,yBAAKhB,UAAWF,EAAQoE,MACtB,kBAAC6B,EAAA,EAAD,CAAYC,UAAU,EAAMC,aAAW,iBACrC,0BACEjG,UAAS,UAAKF,EAAQ+E,GAAb,YAAmBX,GAC5BpB,MAAO,CAAElC,SAAU,YAIzB,yBAAKZ,UAAWF,EAAQgF,MACtB,kBAAChB,EAAA,EAAD,CACE6B,QAAQ,QACRC,UAAU,OACV1G,MAAM,cACN2G,MAAM,UAELK,KAAKC,MAAMvD,EAAKwD,KANnB,SAMgC,KAEhC,kBAACtC,EAAA,EAAD,CACE6B,QAAQ,QACRC,UAAU,OACV1G,MAAM,gBACN2G,MAAM,UAELK,KAAKC,MAAMvD,EAAKyD,KANnB,eAeZ,OACE,kBAAC1D,EAAA,EAAD,CAAMnD,WAAS,EAAC2E,QAAS,EAAGmC,QAAQ,SAASlC,aAAa,UACvDY,IC1EDzE,EAAY9B,YAAW,CAC3B8H,KAAM,CACJhC,cAAe,OAEjBC,KAAM,CACJgC,SAAU,IACVlH,UAAW,KAEbmH,SAAU,CACR3I,QAAS,QACTiF,UAAW,UAEb8B,GAAI,CACF3F,MAAO,UACPwH,YAAa,oBACbvI,QAAS,OACTyC,SAAU,OACV9C,QAAS,gBAEXgH,KAAM,CACJhH,QAAS,eACTK,QAAS,OACTwC,OAAQ,UAEVgG,SAAU,CACR5D,UAAW,YAuDA6D,EAnDK,SAACnF,GACnB,IAAM3B,EAAUS,IACRsG,EAAmDpF,EAAnDoF,eAAgBC,EAAmCrF,EAAnCqF,eAAgB7B,EAAmBxD,EAAnBwD,SAAUf,EAASzC,EAATyC,KAElD,OACE,kBAACvB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI7C,UAAWF,EAAQyG,MACpC,kBAACf,EAAA,EAAD,CAAMxF,UAAWF,EAAQ0E,MACrBqC,EAkCE,kBAACjD,EAAA,EAAD,CAAkB1E,MAAM,cAjC1B,oCACE,kBAAC6H,EAAA,EAAD,CACEC,MAAK,UAAKF,EAAeG,KAApB,YAA4BH,EAAeI,SAChDC,UAAW,kBAAC,EAAD,CAAWnD,KAAM8C,EAAe9C,SAE7C,kBAACyB,EAAA,EAAD,KACE,yBAAKzF,UAAWF,EAAQ2G,UACtB,uBAAGzG,UAAS,UAAKkE,EAAL,YAAapE,EAAQ+E,MACjC,kBAACf,EAAA,EAAD,CACE6B,QAAQ,KACR3F,UAAWF,EAAQgF,KACnB5F,MAAM,cACN0G,UAAU,MAETM,KAAKC,MAAMW,EAAeM,aAN7B,UASF,kBAACtD,EAAA,EAAD,CACE6B,QAAQ,KACR3F,UAAWF,EAAQ6G,SACnBzH,MAAM,cACN0G,UAAU,MAETkB,EAAeO,YAAYC,QAAQ,UAAU,SAACC,GAC7C,OACEA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,OAAO,GAAGC,oBAUxD,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,CAAU3C,SAAUA,QC/FxB4C,EAAUC,0CACVC,EAAUD,mCAGhB,SAASE,EAAeC,GACtB,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAJ,2BAA8BH,EAASI,aA8C/C,SAASC,EAA0BC,GACjC,IAAMC,EAAS,CACbvB,KAAMsB,EAAKE,KACXvB,QAASqB,EAAKG,IAAIxB,QAClBlD,KAAgB,IAAVuE,EAAKI,GACXC,SAAUL,EAAKM,KAAKD,SACpBxD,QAASmD,EAAKO,QAAUP,EAAKO,QAAQ,GAAG1F,GAAK,EAC7CgE,YAAamB,EAAKM,KAAK/D,KACvBuC,YAAakB,EAAKO,SAAWP,EAAKO,QAAQ,GAAGzB,YAC7C0B,WAAY7C,KAAKC,MAAwB,IAAlBoC,EAAKS,KAAKC,OACjCC,UAAWX,EAAKY,IAChBrD,OAAQyC,EAAKzC,OAASyC,EAAKzC,OAAS,GACpC5B,KAAMqE,EAAKO,QAAUP,EAAKO,QAAQ,GAAG5E,KAAO,GAC5CmC,IAAKkC,EAAKM,KAAKO,SACfhD,IAAKmC,EAAKM,KAAKQ,UAiBjB,OAbId,EAAKzC,SACP0C,EAAO1C,OAASyC,EAAKzC,QAGnByC,EAAKO,SAAWP,EAAKO,QAAQ,GAAG5E,OAClCsE,EAAOtE,KAAOqE,EAAKO,QAAQ,GAAG5E,MAG5BqE,EAAKM,KAAKQ,UAAYd,EAAKM,KAAKO,WAClCZ,EAAOnC,IAAMkC,EAAKM,KAAKO,SACvBZ,EAAOpC,IAAMmC,EAAKM,KAAKQ,UAGlBb,EC3ET,ICCec,EATI,CACjB,CACEC,KAAM,IACNd,KAAM,mBACN7C,UDI+B,WAAO,IAAD,EACfjE,mBAAS,eADM,mBAChCsF,EADgC,KAC1BuC,EAD0B,OAEb7H,mBAAS,MAFI,mBAEhCN,EAFgC,KAEzBoI,EAFyB,OAGK9H,mBAAS,IAHd,mBAGhCmF,EAHgC,KAGhB4C,EAHgB,OAIP/H,mBAAS,IAJF,mBAIhCsD,EAJgC,KAItB0E,EAJsB,OAKKhI,oBAAS,GALd,mBAKhCkF,EALgC,KAKhB+C,EALgB,KAOvCvH,qBAAU,WACRuH,GAAkB,GDHtB,SAAoB3C,GAClB,OAAO4C,MAAM,GAAD,OACPhC,EADO,uBACeZ,EADf,+BAC0Cc,IAEnD+B,MAAK,SAACC,GAAD,OAAS/B,EAAe+B,MAC7BD,MAAK,SAAChB,GACL,OAAIkB,OAAOC,QAAQnB,GAASoB,OACP5B,EAA0BQ,GAGxCA,KCNTqB,CAAWlD,GACR6C,MAAK,SAAChB,GACLY,EAAkBZ,GAClBW,EAAS,MACTG,GAAkB,MAEnBQ,OAAM,SAACC,GACNZ,EAASY,EAAIC,SACbV,GAAkB,QAErB,CAAC3C,EAAM5F,IAEVgB,qBAAU,YDEZ,SAAqB4E,GACnB,OAAO4C,MAAM,GAAD,OACPhC,EADO,wBACgBZ,EADhB,+BAC2Cc,IAEpD+B,MAAK,SAACC,GAAD,OAAS/B,EAAe+B,MAC7BD,MAAK,SAAC9E,GACL,GAAIgF,OAAOC,QAAQjF,GAAQkF,OAAQ,CAEjC,IADA,IAAMjF,EAAW,GACRsF,EAAI,EAAGA,EAAIvF,EAAOwF,KAAKN,OAAQK,GAAK,EAC3CtF,EAASwF,KAAKnC,EAA0BtD,EAAOwF,KAAKD,EAAI,KAE1D,OAAOtF,EAET,OAAOD,MCdT0F,CAAYzD,GACT6C,MAAK,SAACvB,GACLoB,EAAYpB,GACZkB,EAAS,SAEVW,OAAM,SAACC,GACNZ,EAASY,EAAIC,cAEhB,CAACrD,EAAM5F,IAMV,GACGyF,GAAkBkD,OAAOW,KAAK7D,GAAgBoD,QAC9CjF,GAAY+E,OAAOW,KAAK1F,GAAUiF,OACnC,CACA,IACMhG,EADS,SACOiB,EAAM2B,EAAe1B,SAASlB,KAEpD,OACE,kBAAC0G,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAAClI,EAAA,EAAD,CAAMnD,WAAS,EAAC2E,QAAS,EAAGC,aAAa,SAASkC,QAAQ,UACxD,kBAAC9E,EAAD,CAAeE,aAdE,SAACO,GACxBuH,EAAQvH,IAa6CZ,MAAOA,IACtD,kBAAC,EAAD,CACEyF,eAAgBA,EAChB7B,SAAUA,EACVf,KAAMA,EACN2C,eAAgBA,MAM1B,OACE,6BACE,kBAACjD,EAAA,EAAD,CAAkB1E,MAAOmC,EAAQ,YAAc,YAC9CA,EAAQ,2BAAIA,GAAa,KC/D5ByJ,OAAQ,MCKNvK,GAAY9B,aAAW,SAAC2C,GAAD,MAAY,CACvC2J,QAAS,CACPjM,SAAU,WACVkM,IAAK,IACLhM,OAAQ,QACR,UAAW,CACTlB,QAAS,QACTE,MAAO,OACPD,QAAS,QAGbA,QAAS,CACPwD,UAAW,OACXpD,QAAS,YACTmB,UAAW,uBAEbE,UAAU,eAAM/B,OAqDHwN,GAlDa,WAC1B,IAAMnL,EAAUS,KAEVa,EAAQ8J,YAAe,CAC3BC,WAAY,CACV/M,WAAY,CACV,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAgN,KAAK,KACPC,UAAW,CACTzK,SAAU,GACVvC,WAAY,WAoBlB,OACE,kBAACiN,EAAA,EAAD,CAAelK,MAAOA,GACpB,kBAACvB,EAAD,MACA,yBAAKG,UAAWF,EAAQ/B,SACtB,yBAAKiC,UAAWF,EAAQN,WAAsB+L,EAlBjCrG,KAAI,SAACsG,GACpB,MAAoB,MAAhBA,EAAKV,OAEL,kBAAC,IAAD,CACEvB,KAAMiC,EAAKV,OAASU,EAAKjC,KACzB3D,UAAW4F,EAAK5F,UAChBP,IAAKmG,EAAK/C,OAIT,UAUP,kBAAC3H,EAAD,QC/DS2K,GAZgB,WAC7B,OACE,oCACE,iDACA,mHCMcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAeC,SAAUpE,kCACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqE,OAAK,EAAC5C,KAAK,IAAI3D,UAAWqF,KACjC,kBAAC,IAAD,CAAOrF,UAAW6F,QAIxBW,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1C,MAAK,SAAC2C,GACLA,EAAaC,gBAEdtC,OAAM,SAAC/I,GACNsL,QAAQtL,MAAMA,EAAMiJ,c","file":"static/js/main.73445597.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cloud.077965db.svg\";","const defaultFont = {\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  fontWeight: '300',\n  lineHeight: '1.5em',\n};\nconst grayColor = [\n  '#999',\n  '#777',\n  '#3C4858',\n  '#AAAAAA',\n  '#D2D2D2',\n  '#DDD',\n  '#555555',\n  '#333',\n  '#eee',\n  '#ccc',\n  '#e4e4e4',\n  '#E5E5E5',\n  '#f9f9f9',\n  '#f5f5f5',\n  '#495057',\n  '#e7e7e7',\n  '#212121',\n  '#c8c8c8',\n  '#505050',\n];\nconst containerFluid = {\n  paddingRight: '15px',\n  paddingLeft: '15px',\n  marginRight: 'auto',\n  marginLeft: 'auto',\n  '&:before,&:after': {\n    display: 'table',\n    content: '\" \"',\n  },\n  '&:after': {\n    clear: 'both',\n  },\n};\n\nconst container = {\n  paddingRight: '15px',\n  paddingLeft: '15px',\n  marginRight: 'auto',\n  marginLeft: 'auto',\n  '@media (min-width: 768px)': {\n    width: '750px',\n  },\n  '@media (min-width: 992px)': {\n    width: '970px',\n  },\n  '@media (min-width: 1200px)': {\n    width: '1170px',\n  },\n  '&:before,&:after': {\n    display: 'table',\n    content: '\" \"',\n  },\n  '&:after': {\n    clear: 'both',\n  },\n};\n\nconst footerStyle = {\n  right: {\n    margin: '0',\n    fontSize: '14px',\n    float: 'right!important',\n    padding: '15px',\n  },\n  footer: {\n    bottom: '0',\n    borderTop: `1px solid ${grayColor[15]}`,\n    padding: '15px 0',\n    ...defaultFont,\n    zIndex: 4,\n  },\n};\n\nexport { containerFluid, container, footerStyle };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar } from '@material-ui/core';\n\nimport { containerFluid } from '../../assets/styles';\nimport Logo from '../../assets/images/cloud.svg';\n\nconst styles = makeStyles({\n  appBar: {\n    backgroundColor: 'transparent',\n    boxShadow: 'none',\n    marginBottom: '0',\n    position: 'absolute',\n    width: '100%',\n    height: '73px',\n    paddingTop: '10px',\n    zIndex: 1029,\n    color: '#555555',\n    border: '0',\n    borderRadius: '3px',\n    padding: '10px 0',\n    transition: 'all 150ms ease 0s',\n    minHeight: '50px',\n    display: 'block',\n    borderBottom: '1px solid #0028641f',\n  },\n  container: {\n    ...containerFluid,\n    minHeight: '50px',\n  },\n  link: {\n    textDecoration: 'none',\n  },\n  logo: {\n    height: '40px',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n  },\n});\n\nexport default function Header() {\n  const classes = styles();\n\n  return (\n    <AppBar className={classes.appBar}>\n      <Toolbar className={classes.container}>\n        <Link to=\"/\" className={classes.link} data-testid=\"homeLink\">\n          <img src={Logo} className={classes.logo} alt=\"Weather Forecast\" />{' '}\n          Forecast App\n        </Link>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { containerFluid } from '../../assets/styles';\n\nconst useStyles = makeStyles({\n  container: { ...containerFluid },\n  left: {\n    float: 'left',\n    display: 'block',\n  },\n  right: {\n    margin: '0',\n    fontSize: '14px',\n    float: 'right',\n    padding: '15px',\n  },\n  footer: {\n    bottom: '0',\n    padding: '15px 0',\n    zIndex: 4,\n  },\n});\n\nexport default function Footer() {\n  const classes = useStyles();\n  return (\n    <footer className={classes.footer}>\n      <div className={classes.container}>\n        <p className={classes.right}>\n          &copy;{moment().format('YYYY')}\n          <a\n            href=\"https://dtahoa.github.io\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            dtahoa\n          </a>\n        </p>\n      </div>\n    </footer>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  CircularProgress,\n  FormControl,\n  Grid,\n  Input,\n  InputAdornment,\n  InputLabel,\n  Typography,\n} from '@material-ui/core';\nimport Search from '@material-ui/icons/Search';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport useDebounce from '../../hooks';\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    color: 'red',\n    padding: '10px',\n  },\n  search: {\n    marginTop: '10px',\n  },\n}));\n\ninterface WeatherSearchProps {\n  onCityChange: (value: string) => void;\n  error: boolean | undefined | null;\n}\n\nexport default function WeatherSearch(props: WeatherSearchProps) {\n  const classes = useStyles();\n  const { onCityChange, error } = props;\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isSearching, setSearching] = useState(false);\n  const debouncedSearchTerm = useDebounce(searchTerm, 1000);\n  const hasError = error || false;\n\n  // eslint-disable-next-line\n  const handleSearch = (event: any) => {\n    setSearching(true);\n    setSearchTerm(event.target.value);\n  };\n\n  useEffect(() => {\n    if (debouncedSearchTerm) {\n      onCityChange(debouncedSearchTerm);\n      setSearching(false);\n    }\n  }, [onCityChange, debouncedSearchTerm, isSearching]);\n\n  return (\n    <Grid item md={12} style={{ textAlign: 'left' }}>\n      <FormControl>\n        <InputLabel htmlFor=\"search-city\">Enter city name</InputLabel>\n        <Input\n          id=\"search-city\"\n          role=\"search\"\n          type=\"text\"\n          error={hasError}\n          onChange={handleSearch}\n          autoFocus\n          endAdornment={\n            isSearching ? (\n              <InputAdornment position=\"end\">\n                <CircularProgress size={20} />\n              </InputAdornment>\n            ) :\n              (\n                <InputAdornment position=\"start\">\n                  <Search />\n                </InputAdornment>\n              )\n          }\n        />\n        {error && <Typography className={classes.error}>{error}</Typography>}\n      </FormControl>\n    </Grid>\n  );\n}\n","import { useState, useEffect } from 'react';\n\n/**\n * This hook allows you to debounce any fast changing value. https://usehooks.com/useDebounce/\n * @param value \n * @param delay \n */\nexport default function useDebounce(value: string, delay: number) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Set debouncedValue to value (passed in) after the specified delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Return a cleanup function that will be called every time ...\n      // ... useEffect is re-called. useEffect will only be re-called ...\n      // ... if value changes (see the inputs array below).\n      // This is how we prevent debouncedValue from changing if value is ...\n      // ... changed within the delay period. Timeout gets cleared and restarted.\n      // To put it in context, if the user is typing within our app's ...\n      // ... search box, we don't want the debouncedValue to update until ...\n      // ... they've stopped typing for more than 500ms.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    // Only re-call effect if value changes\n    // You could also add the \"delay\" var to inputs array if you ...\n    // ... need to be able to change that dynamically.\n    [delay, value]\n  );\n\n  return debouncedValue;\n}\n","import React from 'react';\nimport moment from 'moment';\n\nconst SubHeader = (props: { date: number }) => <span>{moment(props.date).format('ddd, h:m A')}</span>;\n\nexport default SubHeader;\n","import React from 'react';\nimport { IconButton, Typography } from '@material-ui/core';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport moment from 'moment';\n\nimport { icons } from '../../constants';\nimport { ForecastItem } from '../../types';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    icon: {\n      marginRight: theme.spacing(2),\n      alignContent: 'center',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n    cardGrid: {\n      justifyContent: 'center',\n      textAlign: 'center',\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4),\n    },\n    card: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      background: '#fdcb6e',\n    },\n    cardContent: {\n      flexGrow: 1,\n    },\n    wi: {\n      color: '#2d3436',\n    },\n    temp: {\n      alignContent: 'center',\n      textAlign: 'center',\n    },\n  })\n);\nconst Forecast: React.FC<{ forecast: ForecastItem[] }> = (props) => {\n  const classes = useStyles();\n  const prefix = 'wi wi-';\n  const { forecast } = props;\n  const result = forecast.map((item: ForecastItem) => {\n    const icon = prefix + icons[item.icon_id].icon;\n\n    return (\n      <Grid item key={item.date} xs={12} sm={3} md={2}>\n        <Card className={classes.card}>\n          <CardContent className={classes.cardContent}>\n            <Typography\n              gutterBottom\n              variant=\"subtitle1\"\n              component=\"h3\"\n              align=\"center\"\n            >\n              {moment(item.dt_txt).format('dddd')}\n            </Typography>\n            <div className={classes.icon}>\n              <IconButton disabled={true} aria-label=\"forecast icon\">\n                <span\n                  className={`${classes.wi} ${icon}`}\n                  style={{ fontSize: '24px' }}\n                />\n              </IconButton>\n            </div>\n            <div className={classes.temp}>\n              <Typography\n                variant=\"body2\"\n                component=\"span\"\n                color=\"textPrimary\"\n                align=\"center\"\n              >\n                {Math.round(item.min)}&deg; /{' '}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                component=\"span\"\n                color=\"textSecondary\"\n                align=\"center\"\n              >\n                {Math.round(item.max)}&deg;\n              </Typography>\n            </div>\n          </CardContent>\n        </Card>\n      </Grid>\n    );\n  });\n\n  return (\n    <Grid container spacing={2} justify=\"center\" alignContent=\"center\">\n      {result}\n    </Grid>\n  );\n};\n\nexport default Forecast;\n","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Typography,\n  Grid,\n  makeStyles,\n  CardActions,\n} from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport SubHeader from './subHeader';\nimport Forecast from '../forecast';\nimport { WeatherFormated, ForecastItem } from '../../types';\n\ninterface WeatherInfoProps {\n  loadingWeather: boolean;\n  currentWeather: WeatherFormated;\n  forecast: ForecastItem[];\n  icon: string;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    paddingBottom: '0px',\n  },\n  card: {\n    minWidth: 600,\n    minHeight: 500,\n  },\n  iconTemp: {\n    display: 'block',\n    textAlign: 'center',\n  },\n  wi: {\n    color: '#2d3436',\n    borderRight: '1px solid #2d3436',\n    padding: '20px',\n    fontSize: '80px',\n    display: 'inline-block',\n  },\n  temp: {\n    display: 'inline-block',\n    padding: '20px',\n    margin: '20px 0',\n  },\n  tempDesc: {\n    textAlign: 'center',\n  },\n});\n\nconst WeatherInfo = (props: WeatherInfoProps) => {\n  const classes = useStyles();\n  const { loadingWeather, currentWeather, forecast, icon } = props;\n\n  return (\n    <Grid item md={12} className={classes.root}>\n      <Card className={classes.card}>\n        {!loadingWeather ? (\n          <>\n            <CardHeader\n              title={`${currentWeather.city} ${currentWeather.country}`}\n              subheader={<SubHeader date={currentWeather.date} />}\n            />\n            <CardContent>\n              <div className={classes.iconTemp}>\n                <i className={`${icon} ${classes.wi}`} />\n                <Typography\n                  variant=\"h2\"\n                  className={classes.temp}\n                  color=\"textPrimary\"\n                  component=\"h2\"\n                >\n                  {Math.round(currentWeather.temperature)}&deg;C\n                </Typography>\n              </div>\n              <Typography\n                variant=\"h4\"\n                className={classes.tempDesc}\n                color=\"textPrimary\"\n                component=\"h4\"\n              >\n                {currentWeather.description.replace(/\\w\\S*/g, (txt: string) => {\n                  return (\n                    txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n                  );\n                })}\n              </Typography>\n            </CardContent>\n          </>\n        ) :\n          (\n            <CircularProgress color=\"secondary\" />\n          )}\n        <CardActions>\n          <Forecast forecast={forecast} />\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default WeatherInfo;\n","import { Weather } from '../types';\nconst API_URL = process.env.REACT_APP_API_URL || 'https://api.openweathermap.org/data/2.5';\nconst API_KEY = process.env.REACT_APP_API_KEY || '84777e8df3b215d48d552278b4bc99ec';\n\n// eslint-disable-next-line\nfunction handleResponse(response: any) {\n  if (response.ok) {\n    return response.json();\n  }\n  throw new Error(`Error: City name ${response.statusText}`);\n}\n\n/**\n * Fetch current weather by city name\n * @param city\n */\nfunction getWeather(city: string) {\n  return fetch(\n    `${API_URL}/weather/?q=${city}&units=metric&APPID=${API_KEY}`\n  )\n    .then((res) => handleResponse(res))\n    .then((weather) => {\n      if (Object.entries(weather).length) {\n        const mappedData = mapDataToWeatherInterface(weather);\n        return mappedData;\n      }\n      return weather;\n    });\n}\n\n/**\n * Fetch forecast by city name\n * @param city \n */\nfunction getForecast(city: String) {\n  return fetch(\n    `${API_URL}/forecast/?q=${city}&units=metric&APPID=${API_KEY}`\n  )\n    .then((res) => handleResponse(res))\n    .then((result) => {\n      if (Object.entries(result).length) {\n        const forecast = [];\n        for (let i = 0; i < result.list.length; i += 8) {\n          forecast.push(mapDataToWeatherInterface(result.list[i + 4]));\n        }\n        return forecast;\n      }\n      return result;\n    });\n}\n\n/**\n * Map data from API to weather interface\n * @param data \n */\nfunction mapDataToWeatherInterface(data: Weather) {\n  const mapped = {\n    city: data.name,\n    country: data.sys.country,\n    date: data.dt * 1000,\n    humidity: data.main.humidity,\n    icon_id: data.weather ? data.weather[0].id : 0,\n    temperature: data.main.temp,\n    description: data.weather && data.weather[0].description,\n    wind_speed: Math.round(data.wind.speed * 3.6), // convert from m/s to km/h\n    condition: data.cod,\n    dt_txt: data.dt_txt ? data.dt_txt : '',\n    icon: data.weather ? data.weather[0].icon : '',\n    max: data.main.temp_max,\n    min: data.main.temp_min,\n  };\n\n  // Add extra properties for the five day forecast: dt_txt, icon, min, max\n  if (data.dt_txt) {\n    mapped.dt_txt = data.dt_txt;\n  }\n\n  if (data.weather && data.weather[0].icon) {\n    mapped.icon = data.weather[0].icon;\n  }\n\n  if (data.main.temp_min && data.main.temp_max) {\n    mapped.max = data.main.temp_max;\n    mapped.min = data.main.temp_min;\n  }\n\n  return mapped;\n}\n\nexport { getWeather, getForecast, handleResponse, mapDataToWeatherInterface };\n","import React, { useState, useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Container, Grid } from '@material-ui/core';\n\nimport WeatherSearch from '../../components/search';\nimport WeatherInfo from '../../components/weatherInfo/weatherInfo';\nimport { icons } from '../../constants';\nimport { getWeather, getForecast } from '../../api';\n\nimport { WeatherFormated, ForecastItem } from '../../types';\n\nconst WeatherContainer: React.FC = () => {\n  const [city, setCity] = useState('Ho Chi Minh');\n  const [error, setError] = useState(null);\n  const [currentWeather, setCurrentWeather] = useState({} as WeatherFormated);\n  const [forecast, setForecast] = useState([] as ForecastItem[]);\n  const [loadingWeather, setLoadingWeather] = useState(false);\n\n  useEffect(() => {\n    setLoadingWeather(true);\n    getWeather(city)\n      .then((weather: WeatherFormated) => {\n        setCurrentWeather(weather);\n        setError(null);\n        setLoadingWeather(false);\n      })\n      .catch((err) => {\n        setError(err.message);\n        setLoadingWeather(false);\n      });\n  }, [city, error]);\n\n  useEffect(() => {\n    getForecast(city)\n      .then((data: ForecastItem[]) => {\n        setForecast(data);\n        setError(null);\n      })\n      .catch((err) => {\n        setError(err.message);\n      });\n  }, [city, error]);\n\n  const handleCityChange = (value: string) => {\n    setCity(value);\n  };\n\n  if (\n    (currentWeather && Object.keys(currentWeather).length) ||\n    (forecast && Object.keys(forecast).length)\n  ) {\n    const prefix = 'wi wi-';\n    const icon = prefix + icons[currentWeather.icon_id].icon;\n\n    return (\n      <Container maxWidth=\"md\">\n        <Grid container spacing={2} alignContent=\"center\" justify=\"center\">\n          <WeatherSearch onCityChange={handleCityChange} error={error} />\n          <WeatherInfo\n            currentWeather={currentWeather}\n            forecast={forecast}\n            icon={icon}\n            loadingWeather={loadingWeather}\n          />\n        </Grid>\n      </Container>\n    );\n  }\n  return (\n    <div>\n      <CircularProgress color={error ? 'secondary' : 'primary'} />\n      {error ? <p>{error}</p> : ''}\n    </div>\n  );\n};\n\nexport default WeatherContainer;\n","import WeatherContainer from './containers/weather';\n\n// Config routes here\nconst dashRoutes = [\n  {\n    path: '/',\n    name: 'WeatherDashboard',\n    component: WeatherContainer,\n    layout: '/',\n  },\n];\n\nexport default dashRoutes;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\n\nimport Header from '../components/header';\nimport Footer from '../components/footer';\n\nimport routes from '../routes';\n\nimport { containerFluid } from '../assets/styles';\nimport { RouteType } from '../types';\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    position: 'relative',\n    top: '0',\n    height: '100vh',\n    '&:after': {\n      display: 'table',\n      clear: 'both',\n      content: '\" \"',\n    },\n  },\n  content: {\n    marginTop: '70px',\n    padding: '30px 15px',\n    minHeight: 'calc(100vh - 222px)',\n  },\n  container: { ...containerFluid },\n}));\n\nconst AppLayout: React.FC = () => {\n  const classes = useStyles();\n\n  const theme = createMuiTheme({\n    typography: {\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n      subtitle1: {\n        fontSize: 16,\n        fontWeight: 'bold',\n      },\n    },\n  });\n\n  const getRoutes = (routeList: RouteType[]) => {\n    return routeList.map((prop) => {\n      if (prop.layout === '/') {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={prop.name}\n          />\n        );\n      }\n      return null;\n    });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Header />\n      <div className={classes.content}>\n        <div className={classes.container}>{getRoutes(routes)}</div>\n      </div>\n      <Footer />\n    </ThemeProvider>\n  );\n};\n\nexport default AppLayout;\n","import React from 'react';\n\nconst PageNotFound: React.FC = () => {\n  return (\n    <>\n      <h3>Page not found :(</h3>\n      <p>\n        Maybe the page you are looking for has been\n        removed, or you typed in the wrong URL\n      </p>\n    </>\n  );\n};\n\nexport default PageNotFound;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport './index.css';\nimport AppLayout from './layouts/app';\nimport PageNotFound from './components/notfound';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={AppLayout} />\n        <Route component={PageNotFound} />\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}